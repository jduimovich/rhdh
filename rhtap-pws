#!/bin/bash

function checkNSExists() { 
    kubectl get ns $1 &> /dev/null
    ERR=$?
    if [  "$ERR" != "0" ]
    then
        echo "$1 namespace missing!" 
        $2
        return 1
    else
        echo "$1 namespace found"
        return 0
    fi 
} 

echo "Check ACS Installation" 
echo   
checkNSExists "rhacs-operator" "echo 'ACS not installed on local machine.'"
ERR=$?
if [ "$ERR" = 0 ]
then
    URL=https://$(kubectl get routes central -n rhacs-operator -o jsonpath={.spec.host})
    PW=$(oc -n rhacs-operator get secret central-htpasswd -o go-template='{{index .data "password" | base64decode}}')
    
    echo
    echo "ACS Login = $URL"  
    echo "ACS PW = $PW"   
fi  

RHTAP_NS=rhtap   
 echo
echo "Check RHTAP Installation" 
echo 

 
# ensure exists or exist 
checkNSExists $RHTAP_NS exit

CONFIG=$(mktemp)
CONFIG2=$(mktemp)
kubectl get configmap -n $RHTAP_NS redhat-developer-hub-app-config-extra  -o yaml >$CONFIG
yq .data.\"app-config.extra.yaml\" $CONFIG > $CONFIG2   
TARGET=$(yq ".catalog.locations[0].target" $CONFIG2)
echo "DEVELOPER_HUB__CATALOG__URL is $DEVELOPER_HUB__CATALOG__URL" 
echo "RHDH Configured to use: $TARGET"  
echo 
 

URL=https://$(kubectl get routes rhtap-argocd-server -n $RHTAP_NS -o jsonpath={.spec.host})
P64=$(kubectl get secret rhtap-argocd-cluster -n rhtap -ojsonpath='{.data.admin\.password}' )
ARGOPW=$(echo $P64 | base64 --decode -i -)
echo
echo "rhtap argocd console = $URL" 
echo "rhtap argo pw = $ARGOPW" 
  

WEBHOOK=https://$(oc get routes -n openshift-pipelines pipelines-as-code-controller -ojsonpath={.spec.host})
echo
echo "Pac Webhook = $WEBHOOK"  