#!/bin/bash

function checkNSExists() { 
    oc get ns $1 &> /dev/null
    ERR=$?
    if [  "$ERR" != "0" ]
    then 
        $2
        return 1
    else 
        return 0
    fi 
} 

echo "Check ACS Installation"  
checkNSExists "rhacs-operator" "echo ACS not installed on local machine."
ERR=$?
if [ "$ERR" = 0 ]
then
    URL=https://$(oc get routes central -n rhacs-operator -o jsonpath={.spec.host})
    PW=$(oc -n rhacs-operator get secret central-htpasswd -o go-template='{{index .data "password" | base64decode}}')
    
    echo
    echo "ACS Login = $URL"  
    echo "ACS PW = $PW"   
fi  

RHTAP_NS=rhtap    
echo "Check RHTAP Installation" 
echo 

 
# ensure exists or exist 
checkNSExists $RHTAP_NS exit

CONFIG=$(mktemp)
CONFIG2=$(mktemp)
oc get configmap -n $RHTAP_NS developer-hub-rhtap-app-config -o yaml >$CONFIG
yq .data.\"app-config.rhtap.yaml\" $CONFIG > $CONFIG2   
TARGET=$(yq ".catalog.locations[0].target" $CONFIG2)
echo "DEVELOPER_HUB__CATALOG__URL is $DEVELOPER_HUB__CATALOG__URL" 
echo "RHDH Configured to use: $TARGET"  
echo 

function showRoutesInNS() { 
    echo $1
    RNS=$2 
    ROUTES=$(oc get routes -n $RNS -o name)
    ROUTES=${ROUTES/ /$'\n'/}
    for r in $ROUTES; do 
        URL=https://$(oc get $r -n $RNS -o jsonpath={.spec.host})
        echo " $URL" 
    done 
}

URL=https://$(oc get routes argocd-server -n $RHTAP_NS -o jsonpath={.spec.host})
P64=$(oc get secret argocd-cluster -n rhtap -ojsonpath='{.data.admin\.password}' )
ARGOPW=$(echo $P64 | base64 --decode -i -)
echo
echo "rhtap argocd console = $URL" 
echo "rhtap argo pw = $ARGOPW" 
  
showRoutesInNS "RHTAP URLS" $RHTAP_NS
showRoutesInNS "TPA URLS" rhtap-tpa
echo "TPA Logins" 
echo "User $(oc get secrets -n rhtap-tpa tpa-realm-chicken-admin -o jsonpath={.data.username} | base64 -d)"
echo "PW $(oc get secrets -n rhtap-tpa tpa-realm-chicken-admin -o jsonpath={.data.password} | base64 -d)" 
showRoutesInNS "TAS URLS" rhtap-tas
showRoutesInNS "PAC URLS" openshift-pipelines
 
WEBHOOK=https://$(oc get routes -n openshift-pipelines pipelines-as-code-controller -ojsonpath={.spec.host})
echo
echo "Pac Webhook = $WEBHOOK"  