SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" 
 
source $SCRIPTDIR/config 

$SCRIPTDIR/util/get-appconfig 

# Create clusterRole

NS=$(oc project --short)

oc apply -f clusterrole.yaml 

# hack - Set to the token from my component namespaceâ€™s pipeline serviceaccount 

PTOKEN_SECRET=$(kubectl get secret  -o name | grep pipeline-token)

TOKEN=$(oc get $PTOKEN_SECRET -n $NS -o jsonpath={.data.token} | base64 -d)

# Create clusterrolebinding 

kubectl create clusterrolebinding tekton-plugin-binding --clusterrole=rhtap-kubernetes-plugin --serviceaccount=$NS:pipeline

KUBE=workdir/kube.yaml
cat <<KUBE >$KUBE
kubernetes:
  clusterLocatorMethods:
  - clusters:
    - authProvider: serviceAccount
      name: dev-cluster-infra
      serviceAccountToken: $TOKEN
      skipTLSVerify: true
      url: https://kubernetes.default.svc
    type: config
KUBE
yq -i '. *= load("workdir/kube.yaml")' $APP_CONFIG_FILE


# concat missing plugins if installer has not installed yet
PLUGINS=workdir/plugins.yaml
yq .plugins $DYNAMIC_PLUGINS_FILE  >$PLUGINS 
 
if ! grep -q "janus-idp-backstage-plugin-topology" $PLUGINS; then  
cat <<TOPO_PLUGIN >$PLUGINS
- disabled: false
  package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-topology 
TOPO_PLUGIN
else 
  echo "janus-idp-backstage-plugin-topology already enabled"
fi

if ! grep -q "dynamic-plugins/dist/backstage-plugin-kubernetes" $PLUGINS; then 
cat <<KUBE_PLUGIN >>$PLUGINS
- disabled: false
  package: ./dynamic-plugins/dist/backstage-plugin-kubernetes
- disabled: false
  package: ./dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic
  pluginConfig:
    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
      - clusters:
        - authProvider: serviceAccount
          name: pipelinerun
          serviceAccountToken: $TOKEN
          skipTLSVerify: true
          url:  https://kubernetes.default.svc
        type: config
      customResources:
        - group: 'tekton.dev'
          apiVersion: 'v1'
          plural: 'pipelineruns'
        - group: 'tekton.dev'
          apiVersion: 'v1'
          plural: 'taskruns'
KUBE_PLUGIN
else 
  echo "dynamic-plugins/dist/backstage-plugin-kubernetes already enabled"
fi
 
if ! grep -q "dynamic-plugins/dist/janus-idp-backstage-plugin-tekton" $PLUGINS; then 
cat <<TEKTON_PLUGIN >>$PLUGINS
- disabled: false
  package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-tekton
  pluginConfig:
    dynamicPlugins:
      frontend:
        janus-idp.backstage-plugin-tekton:
          mountPoints:
          - config:
              if:
                allOf:
                - isTektonCIAvailable
              layout:
                gridColumn: 1 / -1
                gridRowStart: 1
            importName: TektonCI
            mountPoint: entity.page.ci/cards 
TEKTON_PLUGIN
else 
  echo "dynamic-plugins/dist/janus-idp-backstage-plugin-tekton already enabled"
fi 
echo "includes:" > $DYNAMIC_PLUGINS_FILE
echo "- dynamic-plugins.default.yaml" >> $DYNAMIC_PLUGINS_FILE
echo "plugins:" >> $DYNAMIC_PLUGINS_FILE 
cat $PLUGINS >> $DYNAMIC_PLUGINS_FILE

$SCRIPTDIR/util/diff-appconfig 

$SCRIPTDIR/util/put-appconfig 
$SCRIPTDIR/util/recycle-backstage 